* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What happens when we set the display property to flex? 
TODO: Displays an element as a block-level flex container
*/
nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* 
What is the flex-wrap property? 
TODO: If the elements are not flexible items, the flex-wrap property has no effect.
The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. 
If wrapping is allowed, it sets the direction that lines are stacked.
*/
main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 80px;
  text-align: center;
}


footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do? 
TODO: The CSS justify-content property defines how the browser distributes space between 
and around content items along the main-axis of a flex container, and the inline axis of a grid container.
The justify-content property aligns the flexible container's items
when the items do not use all available space on the main-axis (horizontally)
Use the align-items property to align the items vertically.
*/
.products {
  flex: 4;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* 
What is the flex property a shorthand property for?
What is it doing here? 
TODO: 
flex-grow:A number specifying how much the item will grow relative to the rest of the flexible items
flex-shrink: A number specifying how much the item will shrink relative to the rest of the flexible items
flex-basis: The length of the item.
Legal values: "auto", "inherit", or a number followed by "%", "px", "em" or any other length unit
*/
.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

/* 
What does the flex-direction property define?
What is it doing here? 
TODO: The flex-direction CSS property sets how flex items are placed in the flex container
defining the main axis and the direction (normal or reversed). row and column
*/
@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}
